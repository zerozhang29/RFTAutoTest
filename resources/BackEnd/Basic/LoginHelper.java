// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.BackEnd.Basic;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Login</b><br>
 * Generated     : <b>2021/03/09 下午4:59:20</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  3月 09, 2021
 * @author zhangyu
 */
public abstract class LoginHelper extends RationalTestScript
{
	/**
	 * 登录submit： with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : 登 录
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_submit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_submit"));
	}
	/**
	 * 登录submit： with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : 登 录
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_submit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_submit"), anchor, flags);
	}
	
	/**
	 * 雄安IPv6发展监测平台： with default state.
	 *		.text : 雄安IPv6发展监测平台
	 * 		.href : #/
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_IPv6() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_IPv6"));
	}
	/**
	 * 雄安IPv6发展监测平台： with specific test context and state.
	 *		.text : 雄安IPv6发展监测平台
	 * 		.href : #/
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_IPv6(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_IPv6"), anchor, flags);
	}
	
	/**
	 * name： with default state.
	 *		.id : name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_name() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_name"));
	}
	/**
	 * name： with specific test context and state.
	 *		.id : name
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_name(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_name"), anchor, flags);
	}
	
	/**
	 * password： with default state.
	 *		.id : password
	 * 		.type : password
	 * 		.title : 
	 * 		.class : Html.INPUT.password
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_password() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_password"));
	}
	/**
	 * password： with specific test context and state.
	 *		.id : password
	 * 		.type : password
	 * 		.title : 
	 * 		.class : Html.INPUT.password
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_password(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_password"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point IPv6Logo_Pic object in the SUT.
	 */
	protected IFtVerificationPoint IPv6Logo_PicVP() 
	{
		return vp("IPv6Logo_Pic");
	}
	protected IFtVerificationPoint IPv6Logo_PicVP(TestObject anchor)
	{
		return vp("IPv6Logo_Pic", anchor);
	}
	
	

	protected LoginHelper()
	{
		setScriptName("BackEnd.Basic.Login");
	}
	
}

